Harness Status: OK
Found 30 tests: Fail = 26 Pass = 4
Fail Missing arguments: get  assert_throws: function "() => table.get()" did not throw
Pass Branding: get  
Pass Missing arguments: set  
Pass Branding: set  
Fail Basic  'assert_equal_to_array' is not defined
Fail Growing  'assert_equal_to_array' is not defined
Fail Setting out-of-bounds  'assert_equal_to_array' is not defined
Fail Setting non-function  'assert_equal_to_array' is not defined
Fail Setting non-wasm function  'assert_equal_to_array' is not defined
Fail Setting non-wasm arrow function  'assert_equal_to_array' is not defined
Fail Getting out-of-range argument: undefined  assert_throws: function "() => table.get(value)" did not throw
Fail Setting out-of-range argument: undefined  assert_throws: function "() => table.set(value, null)" did not throw
Fail Getting out-of-range argument: NaN  assert_throws: function "() => table.get(value)" did not throw
Fail Setting out-of-range argument: NaN  assert_throws: function "() => table.set(value, null)" did not throw
Fail Getting out-of-range argument: Infinity  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: Infinity  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Getting out-of-range argument: -Infinity  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: -Infinity  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Getting out-of-range argument: -1  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: -1  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Getting out-of-range argument: 4294967296  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: 4294967296  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Getting out-of-range argument: 68719476736  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: 68719476736  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Getting out-of-range argument: "0x100000000"  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: "0x100000000"  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Getting out-of-range argument: object "[object Object]"  assert_throws: function "() => table.get(value)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Setting out-of-range argument: object "[object Object]"  assert_throws: function "() => table.set(value, null)" threw object "RangeError: argument out of range" ("RangeError") expected object "TypeError" ("TypeError")
Fail Order of argument conversion  assert_equals: expected 1 but got 0
Pass Stray argument  
