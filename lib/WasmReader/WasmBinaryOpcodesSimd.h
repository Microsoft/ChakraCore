//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft Corporation and contributors. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------


//temporary until 64x2 types are implemented

#ifndef FOREACH_BOOL_SIMD_TYPE_W_BASE
#define FOREACH_BOOL_SIMD_TYPE_W_BASE(V) \
    V(B2, I)     \
    V(B4, I)     \
    V(B8, I)     \
    V(B16, I)
#endif

#ifndef FOREACH_SIMD_TYPE_W_BASE
#define FOREACH_SIMD_TYPE_W_BASE(V) \
    V(M128, F)   \
    V(M128, I)   \
    FOREACH_BOOL_SIMD_TYPE_W_BASE(V)
#endif

#ifndef FOREACH_SIMD_TYPE
#define FOREACH_SIMD_TYPE(V) \
    V(M128, F) \
    FOREACH_BOOL_SIMD_TYPE_W_BASE(V)
#endif


#ifndef WASM_SIMD_BUILD_OPCODE
#define WASM_SIMD_BUILD_OPCODE(opname, opcode, sig, asmjop, lanes, nyi) WASM_OPCODE(opname, opcode, sig, nyi)
#endif

//SIMD Signatures
#define SIMD_EXTRACT(TYPE, BASE) WASM_SIGNATURE(BASE##_##TYPE##_I, 3, WasmTypes::##BASE##32, WasmTypes::##TYPE, WasmTypes::I32)
#define SIMD_BUILD(TYPE, BASE) WASM_SIGNATURE(TYPE##_##BASE, 2, WasmTypes::##TYPE, WasmTypes::##BASE##32)
#define SIMD_ALL(TYPE, BASE) \
    SIMD_EXTRACT(TYPE, BASE) \
    SIMD_BUILD(TYPE, BASE)

FOREACH_SIMD_TYPE_W_BASE(SIMD_ALL)
#undef SIMD_ALL
#undef SIMD_BUILD
#undef SIMD_EXTRACT

#define SIMD_COMP(TYPE, BASE) WASM_SIGNATURE(TYPE##_##M128X2, 3, WasmTypes::##TYPE, WasmTypes::M128, WasmTypes::M128)
    FOREACH_BOOL_SIMD_TYPE_W_BASE(SIMD_COMP)
#undef SIMD_COMP

WASM_SIGNATURE(M128X3, 3, WasmTypes::M128, WasmTypes::M128, WasmTypes::M128)
WASM_SIGNATURE(M128_M128_I, 3, WasmTypes::M128, WasmTypes::M128, WasmTypes::I32)
WASM_SIGNATURE(M128_M128, 2, WasmTypes::M128, WasmTypes::M128)


WASM_MISC_OPCODE(I2Const, 0x100, Limit, true)
WASM_MISC_OPCODE(I4Const, 0x101, Limit, true)
WASM_MISC_OPCODE(I8Const, 0x102, Limit, true)
WASM_MISC_OPCODE(I16Const, 0x103, Limit, true)
WASM_MISC_OPCODE(B2Const, 0x104, Limit, true)
WASM_MISC_OPCODE(B4Const, 0x105, Limit, true)
WASM_MISC_OPCODE(B8Const, 0x106, Limit, true)
WASM_MISC_OPCODE(B16Const, 0x107, Limit, true)
WASM_MISC_OPCODE(F2Const, 0x108, Limit, true)
WASM_MISC_OPCODE(F4Const, 0x109, Limit, true)
//@TODO
WASM_MISC_OPCODE(I2Build, 0x10a, Limit, true)
WASM_SIMD_BUILD_OPCODE(I4Build, 0x10b, M128_I, Simd128_IntsToI4, 4, false)
WASM_SIMD_BUILD_OPCODE(I8Build, 0x10c, M128_I, Simd128_IntsToI8, 8, false)
WASM_SIMD_BUILD_OPCODE(I16Build, 0x10d, M128_I, Simd128_IntsToI16, 16, false)
WASM_MISC_OPCODE(B2Build, 0x10e, Limit, true)
WASM_SIMD_BUILD_OPCODE(B4Build, 0x10f, B4_I, Simd128_IntsToB4, 4, false)
WASM_SIMD_BUILD_OPCODE(B8Build, 0x110, B8_I, Simd128_IntsToB8, 8, false)
WASM_SIMD_BUILD_OPCODE(B16Build, 0x111, B16_I, Simd128_IntsToB16, 16, false)
WASM_MISC_OPCODE(F2Build, 0x112, Limit, true)
WASM_SIMD_BUILD_OPCODE(F4Build, 0x113, M128_F, Simd128_FloatsToF4, 4, false)
WASM_MISC_OPCODE(B16Splat, 0x114, Limit, true)
WASM_BINARY_OPCODE(B16ExtractLane, 0x115, I_B16_I, Simd128_ExtractLane_B16, false)
WASM_MISC_OPCODE(B16And, 0x116, Limit, true)
WASM_MISC_OPCODE(B16Or, 0x117, Limit, true)
WASM_MISC_OPCODE(B16Xor, 0x118, Limit, true)
WASM_MISC_OPCODE(B16Not, 0x119, Limit, true)
WASM_MISC_OPCODE(B16AnyTrue, 0x11a, Limit, true)
WASM_MISC_OPCODE(B16AllTrue, 0x11b, Limit, true)
WASM_MISC_OPCODE(B8Splat, 0x11c, Limit, true)
WASM_BINARY_OPCODE(B8ExtractLane, 0x11d, I_B8_I, Simd128_ExtractLane_B8, false)
WASM_MISC_OPCODE(B8And, 0x11e, Limit, true)
WASM_MISC_OPCODE(B8Or, 0x11f, Limit, true)
WASM_MISC_OPCODE(B8Xor, 0x120, Limit, true)
WASM_MISC_OPCODE(B8Not, 0x121, Limit, true)
WASM_MISC_OPCODE(B8AnyTrue, 0x122, Limit, true)
WASM_MISC_OPCODE(B8AllTrue, 0x123, Limit, true)
WASM_MISC_OPCODE(B4Splat, 0x124, Limit, true)
WASM_BINARY_OPCODE(B4ExtractLane, 0x125, I_B4_I, Simd128_ExtractLane_B4, false)
WASM_MISC_OPCODE(B4And, 0x126, Limit, true)
WASM_MISC_OPCODE(B4Or, 0x127, Limit, true)
WASM_MISC_OPCODE(B4Xor, 0x128, Limit, true)
WASM_MISC_OPCODE(B4Not, 0x129, Limit, true)
WASM_MISC_OPCODE(B4AnyTrue, 0x12a, Limit, true)
WASM_MISC_OPCODE(B4AllTrue, 0x12b, Limit, true)
WASM_MISC_OPCODE(B2Splat, 0x12c, Limit, true)
WASM_MISC_OPCODE(B2ExtractLane, 0x12d, Limit, true)
WASM_MISC_OPCODE(B2And, 0x12e, Limit, true)
WASM_MISC_OPCODE(B2Or, 0x12f, Limit, true)
WASM_MISC_OPCODE(B2Xor, 0x130, Limit, true)
WASM_MISC_OPCODE(B2Not, 0x131, Limit, true)
WASM_MISC_OPCODE(B2AnyTrue, 0x132, Limit, true)
WASM_MISC_OPCODE(B2AllTrue, 0x133, Limit, true)
WASM_MISC_OPCODE(I16ReinterpretI8, 0x134, Limit, true)
WASM_MISC_OPCODE(I16ReinterpretI4, 0x135, Limit, true)
WASM_MISC_OPCODE(I16ReinterpretI2, 0x136, Limit, true)
WASM_MISC_OPCODE(I16ReinterpretF4, 0x137, Limit, true)
WASM_MISC_OPCODE(I16ReinterpretF2, 0x138, Limit, true)
WASM_MISC_OPCODE(I16Splat, 0x139, Limit, true)
WASM_BINARY_OPCODE(I16ExtractLaneS, 0x13a, I_M128_I, Simd128_ExtractLane_I16, false)
WASM_BINARY_OPCODE(I16ExtractLaneU, 0x13b, I_M128_I, Simd128_ExtractLane_U16, false)
WASM_BINARY_OPCODE(I16Add, 0x13c, M128X3, Simd128_Add_I16, false)
WASM_BINARY_OPCODE(I16Sub, 0x13d, M128X3, Simd128_Sub_I16, false)
WASM_BINARY_OPCODE(I16Mul, 0x13e, M128X3, Simd128_Mul_I16, false)
WASM_MISC_OPCODE(I16Neg, 0x13f, Limit, true)
WASM_BINARY_OPCODE(I16AddSaturateS, 0x140, M128X3, Simd128_AddSaturate_I16, false)
WASM_BINARY_OPCODE(I16AddSaturateU, 0x141, M128X3, Simd128_AddSaturate_U16, false)
WASM_BINARY_OPCODE(I16SubSaturateS, 0x142, M128X3, Simd128_SubSaturate_I16, false)
WASM_BINARY_OPCODE(I16SubSaturateU, 0x143, M128X3, Simd128_SubSaturate_U16, false)
WASM_BINARY_OPCODE(I16Shl, 0x144, M128_M128_I, Simd128_ShLtByScalar_I16, false)
WASM_BINARY_OPCODE(I16ShrS, 0x145, M128_M128_I, Simd128_ShRtByScalar_I16, false)
WASM_BINARY_OPCODE(I16ShrU, 0x146, M128_M128_I, Simd128_ShRtByScalar_U16, false)
WASM_MISC_OPCODE(I16And, 0x147, Limit, true)
WASM_MISC_OPCODE(I16Or, 0x148, Limit, true)
WASM_MISC_OPCODE(I16Xor, 0x149, Limit, true)
WASM_MISC_OPCODE(I16Not, 0x14a, Limit, true)
WASM_BINARY_OPCODE(I16Eq, 0x14b, B16_M128X2, Simd128_Eq_I16, false)
WASM_BINARY_OPCODE(I16Ne, 0x14c, B16_M128X2, Simd128_Neq_I16, false)
WASM_BINARY_OPCODE(I16LtS, 0x14d, B16_M128X2, Simd128_Lt_I16, false)
WASM_BINARY_OPCODE(I16LtU, 0x14e, B16_M128X2, Simd128_Lt_U16, false)
WASM_BINARY_OPCODE(I16LeS, 0x14f, B16_M128X2, Simd128_LtEq_I16, false)
WASM_BINARY_OPCODE(I16LeU, 0x150, B16_M128X2, Simd128_LtEq_U16, false)
WASM_BINARY_OPCODE(I16GtS, 0x151, B16_M128X2, Simd128_Gt_I16, false)
WASM_BINARY_OPCODE(I16GtU, 0x152, B16_M128X2, Simd128_Gt_U16, false)
WASM_BINARY_OPCODE(I16GeS, 0x153, B16_M128X2, Simd128_GtEq_I16, false)
WASM_BINARY_OPCODE(I16GeU, 0x154, B16_M128X2, Simd128_GtEq_U16, false)
WASM_MISC_OPCODE(I16Load, 0x155, Limit, true)
WASM_MISC_OPCODE(I16Store, 0x156, Limit, true)
WASM_MISC_OPCODE(I8ReinterpretI16, 0x157, Limit, true)
WASM_MISC_OPCODE(I8ReinterpretI4, 0x158, Limit, true)
WASM_MISC_OPCODE(I8ReinterpretI2, 0x159, Limit, true)
WASM_MISC_OPCODE(I8ReinterpretF4, 0x15a, Limit, true)
WASM_MISC_OPCODE(I8ReinterpretF2, 0x15b, Limit, true)
WASM_MISC_OPCODE(I8Splat, 0x15c, Limit, true)
WASM_BINARY_OPCODE(I8ExtractLaneS, 0x15d, I_M128_I, Simd128_ExtractLane_I8, false)
WASM_BINARY_OPCODE(I8ExtractLaneU, 0x15e, I_M128_I, Simd128_ExtractLane_U8, false)
WASM_BINARY_OPCODE(I8Add, 0x15f, M128X3, Simd128_Add_I8, false)
WASM_BINARY_OPCODE(I8Sub, 0x160, M128X3, Simd128_Sub_I8, false)
WASM_BINARY_OPCODE(I8Mul, 0x161, M128X3, Simd128_Mul_I8, false)
WASM_MISC_OPCODE(I8Neg, 0x162, Limit, true)
WASM_BINARY_OPCODE(I8AddSaturateS, 0x163, M128X3, Simd128_AddSaturate_I8, false)
WASM_BINARY_OPCODE(I8AddSaturateU, 0x164, M128X3, Simd128_AddSaturate_U8, false)
WASM_BINARY_OPCODE(I8SubSaturateS, 0x165, M128X3, Simd128_SubSaturate_I8, false)
WASM_BINARY_OPCODE(I8SubSaturateU, 0x166, M128X3, Simd128_SubSaturate_U8, false)
WASM_BINARY_OPCODE(I8Shl, 0x167, M128_M128_I, Simd128_ShLtByScalar_I8, false)
WASM_BINARY_OPCODE(I8ShrS, 0x168, M128_M128_I, Simd128_ShRtByScalar_I8, false)
WASM_BINARY_OPCODE(I8ShrU, 0x169, M128_M128_I, Simd128_ShRtByScalar_U8, false)
WASM_MISC_OPCODE(I8And, 0x16a, Limit, true)
WASM_MISC_OPCODE(I8Or, 0x16b, Limit, true)
WASM_MISC_OPCODE(I8Xor, 0x16c, Limit, true)
WASM_MISC_OPCODE(I8Not, 0x16d, Limit, true)
WASM_BINARY_OPCODE(I8Eq, 0x16e, B8_M128X2, Simd128_Eq_I8, false)
WASM_BINARY_OPCODE(I8Ne, 0x16f, B8_M128X2, Simd128_Neq_I8, false)
WASM_BINARY_OPCODE(I8LtS, 0x170, B8_M128X2, Simd128_Lt_I8, false)
WASM_BINARY_OPCODE(I8LtU, 0x171, B8_M128X2, Simd128_Lt_U8, false)
WASM_BINARY_OPCODE(I8LeS, 0x172, B8_M128X2, Simd128_LtEq_I8, false)
WASM_BINARY_OPCODE(I8LeU, 0x173, B8_M128X2, Simd128_LtEq_U8, false)
WASM_BINARY_OPCODE(I8GtS, 0x174, B8_M128X2, Simd128_Gt_I8, false)
WASM_BINARY_OPCODE(I8GtU, 0x175, B8_M128X2, Simd128_Gt_U8, false)
WASM_BINARY_OPCODE(I8GeS, 0x176, B8_M128X2, Simd128_GtEq_I8, false)
WASM_BINARY_OPCODE(I8GeU, 0x177, B8_M128X2, Simd128_GtEq_U8, false)
WASM_MISC_OPCODE(I8Load, 0x178, Limit, true)
WASM_MISC_OPCODE(I8Store, 0x179, Limit, true)
WASM_MISC_OPCODE(I4ReinterpretI16, 0x17a, Limit, true)
WASM_MISC_OPCODE(I4ReinterpretI8, 0x17b, Limit, true)
WASM_MISC_OPCODE(I4ReinterpretI2, 0x17c, Limit, true)
WASM_MISC_OPCODE(I4ReinterpretF4, 0x17d, Limit, true)
WASM_MISC_OPCODE(I4ReinterpretF2, 0x17e, Limit, true)
WASM_MISC_OPCODE(I4Splat, 0x17f, Limit, true)
WASM_BINARY_OPCODE(I4ExtractLane, 0x180, I_M128_I, Simd128_ExtractLane_I4, false)
WASM_BINARY_OPCODE(I4Add, 0x181, M128X3, Simd128_Add_I4, false)
WASM_BINARY_OPCODE(I4Sub, 0x182, M128X3, Simd128_Sub_I4, false)
WASM_BINARY_OPCODE(I4Mul, 0x183, M128X3, Simd128_Mul_I4, false)
WASM_MISC_OPCODE(I4Neg, 0x184, Limit, true)
WASM_BINARY_OPCODE(I4Shl, 0x185, M128_M128_I, Simd128_ShLtByScalar_I4, false)
WASM_BINARY_OPCODE(I4ShrS, 0x186, M128_M128_I, Simd128_ShRtByScalar_I4, false)
WASM_BINARY_OPCODE(I4ShrU, 0x187, M128_M128_I, Simd128_ShRtByScalar_U4, false)
WASM_MISC_OPCODE(I4And, 0x188, Limit, true)
WASM_MISC_OPCODE(I4Or, 0x189, Limit, true)
WASM_MISC_OPCODE(I4Xor, 0x18a, Limit, true)
WASM_MISC_OPCODE(I4Not, 0x18b, Limit, true)
WASM_BINARY_OPCODE(I4Eq, 0x18c, B4_M128X2, Simd128_Eq_I4, false)
WASM_BINARY_OPCODE(I4Ne, 0x18d, B4_M128X2, Simd128_Neq_I4, false)
WASM_BINARY_OPCODE(I4LtS, 0x18e, B4_M128X2, Simd128_Lt_I4, false)
WASM_BINARY_OPCODE(I4LtU, 0x18f, B4_M128X2, Simd128_Lt_U4, false)
WASM_BINARY_OPCODE(I4LeS, 0x190, B4_M128X2, Simd128_LtEq_I4, false)
WASM_BINARY_OPCODE(I4LeU, 0x191, B4_M128X2, Simd128_LtEq_U4, false)
WASM_BINARY_OPCODE(I4GtS, 0x192, B4_M128X2, Simd128_Gt_I4, false)
WASM_BINARY_OPCODE(I4GtU, 0x193, B4_M128X2, Simd128_Gt_U4, false)
WASM_BINARY_OPCODE(I4GeS, 0x194, B4_M128X2, Simd128_GtEq_I4, false)
WASM_BINARY_OPCODE(I4GeU, 0x195, B4_M128X2, Simd128_GtEq_U4, false)
WASM_MISC_OPCODE(I4Load, 0x196, Limit, true)
WASM_MISC_OPCODE(I4Store, 0x197, Limit, true)
WASM_MISC_OPCODE(I4Load1, 0x198, Limit, true)
WASM_MISC_OPCODE(I4Load2, 0x199, Limit, true)
WASM_MISC_OPCODE(I4Load3, 0x19a, Limit, true)
WASM_MISC_OPCODE(I4Store1, 0x19b, Limit, true)
WASM_MISC_OPCODE(I4Store2, 0x19c, Limit, true)
WASM_MISC_OPCODE(I4Store3, 0x19d, Limit, true)
WASM_MISC_OPCODE(I4TruncS, 0x19e, Limit, true)
WASM_MISC_OPCODE(I4TruncU, 0x19f, Limit, true)
WASM_MISC_OPCODE(I2ReinterpretI16, 0x1a0, Limit, true) //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(I2ReinterpretI8, 0x1a1, Limit, true)  //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(I2ReinterpretI4, 0x1a2, Limit, true)  //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(I2ReinterpretF4, 0x1a3, Limit, true)  //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(I2ReinterpretF2, 0x1a4, Limit, true)  //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(I2Splat, 0x1a5, Limit, true)
WASM_MISC_OPCODE(I2ExtractLane, 0x1a6, Limit, true)
WASM_MISC_OPCODE(I2Add, 0x1a7, Limit, true)
WASM_MISC_OPCODE(I2Sub, 0x1a8, Limit, true)
WASM_MISC_OPCODE(I2Mul, 0x1a9, Limit, true)
WASM_MISC_OPCODE(I2Neg, 0x1aa, Limit, true)
WASM_MISC_OPCODE(I2Shl, 0x1ab, Limit, true)
WASM_MISC_OPCODE(I2ShrS, 0x1ac, Limit, true)
WASM_MISC_OPCODE(I2ShrU, 0x1ad, Limit, true)
WASM_MISC_OPCODE(I2And, 0x1ae, Limit, true)
WASM_MISC_OPCODE(I2Or, 0x1af, Limit, true)
WASM_MISC_OPCODE(I2Xor, 0x1b0, Limit, true)
WASM_MISC_OPCODE(I2Not, 0x1b1, Limit, true)
WASM_MISC_OPCODE(I2Eq, 0x1b2, Limit, true)
WASM_MISC_OPCODE(I2Ne, 0x1b3, Limit, true)
WASM_MISC_OPCODE(I2LtS, 0x1b4, Limit, true)
WASM_MISC_OPCODE(I2LtU, 0x1b5, Limit, true)
WASM_MISC_OPCODE(I2LeS, 0x1b6, Limit, true)
WASM_MISC_OPCODE(I2LeU, 0x1b7, Limit, true)
WASM_MISC_OPCODE(I2GtS, 0x1b8, Limit, true)
WASM_MISC_OPCODE(I2GtU, 0x1b9, Limit, true)
WASM_MISC_OPCODE(I2GeS, 0x1ba, Limit, true)
WASM_MISC_OPCODE(I2GeU, 0x1bb, Limit, true)
WASM_MISC_OPCODE(I2Load, 0x1bc, Limit, true)
WASM_MISC_OPCODE(I2Store, 0x1bd, Limit, true)
WASM_MISC_OPCODE(I2TruncS, 0x1be, Limit, true)
WASM_MISC_OPCODE(I2TruncU, 0x1bf, Limit, true)
WASM_MISC_OPCODE(F4ReinterpretI16, 0x1c0, Limit, true)    //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(F4ReinterpretI8, 0x1c1, Limit, true)    //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(F4ReinterpretI4, 0x1c2, Limit, true)    //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(F4ReinterpretI2, 0x1c3, Limit, true)    //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(F4ReinterpretF2, 0x1c4, Limit, true)    //REMOVE, NOT IN SPEC
WASM_MISC_OPCODE(F4Splat, 0x1c5, Limit, true)
WASM_BINARY_OPCODE(F4ExtractLane, 0x1c6, F_M128_I, Simd128_ExtractLane_F4, false)
WASM_BINARY_OPCODE(F4Add, 0x1c7, M128X3, Simd128_Add_F4, false)
WASM_BINARY_OPCODE(F4Sub, 0x1c8, M128X3, Simd128_Sub_F4, false)
WASM_BINARY_OPCODE(F4Mul, 0x1c9, M128X3, Simd128_Mul_F4, false)
WASM_MISC_OPCODE(F4Neg, 0x1ca, Limit, true)
WASM_MISC_OPCODE(F4And, 0x1cb, Limit, true)
WASM_MISC_OPCODE(F4Or, 0x1cc, Limit, true)
WASM_MISC_OPCODE(F4Xor, 0x1cd, Limit, true)
WASM_MISC_OPCODE(F4Not, 0x1ce, Limit, true)
WASM_BINARY_OPCODE(F4Eq, 0x1cf, B4_M128X2, Simd128_Eq_F4, false)
WASM_BINARY_OPCODE(F4Ne, 0x1d0, B4_M128X2, Simd128_Neq_F4, false)
WASM_BINARY_OPCODE(F4Lt, 0x1d1, B4_M128X2, Simd128_Lt_F4, false)
WASM_BINARY_OPCODE(F4Le, 0x1d2, B4_M128X2, Simd128_LtEq_F4, false)
WASM_BINARY_OPCODE(F4Gt, 0x1d3, B4_M128X2, Simd128_Gt_F4, false)
WASM_BINARY_OPCODE(F4Ge, 0x1d4, B4_M128X2, Simd128_GtEq_F4, false)
WASM_MISC_OPCODE(F4Load, 0x1d5, Limit, true)
WASM_MISC_OPCODE(F4Store, 0x1d6, Limit, true)
WASM_MISC_OPCODE(F4Load1, 0x1d7, Limit, true)
WASM_MISC_OPCODE(F4Load2, 0x1d8, Limit, true)
WASM_MISC_OPCODE(F4Load3, 0x1d9, Limit, true)
WASM_MISC_OPCODE(F4Store1, 0x1da, Limit, true)
WASM_MISC_OPCODE(F4Store2, 0x1db, Limit, true)
WASM_MISC_OPCODE(F4Store3, 0x1dc, Limit, true)
WASM_MISC_OPCODE(F4Abs, 0x1dd, Limit, true)
WASM_BINARY_OPCODE(F4Min, 0x1de, M128X3, Simd128_Min_F4, false)
WASM_BINARY_OPCODE(F4Max, 0x1df, M128X3, Simd128_Max_F4, false)
WASM_BINARY_OPCODE(F4Div, 0x1e0, M128X3, Simd128_Div_F4, false)
WASM_MISC_OPCODE(F4Sqrt, 0x1e1, Limit, true)
WASM_MISC_OPCODE(F4Rcp, 0x1e2, Limit, true)
WASM_MISC_OPCODE(F4Rsqrt, 0x1e3, Limit, true)
WASM_MISC_OPCODE(F4ConvertS, 0x1e4, Limit, true)
WASM_MISC_OPCODE(F4ConvertU, 0x1e5, Limit, true)
WASM_MISC_OPCODE(F2ReinterpretI16, 0x1e6, Limit, true)
WASM_MISC_OPCODE(F2ReinterpretI8, 0x1e7, Limit, true)
WASM_MISC_OPCODE(F2ReinterpretI4, 0x1e8, Limit, true)
WASM_MISC_OPCODE(F2ReinterpretI2, 0x1e9, Limit, true)
WASM_MISC_OPCODE(F2ReinterpretF4, 0x1ea, Limit, true)
WASM_MISC_OPCODE(F2Splat, 0x1eb, Limit, true)
WASM_MISC_OPCODE(F2ExtractLane, 0x1ec, Limit, true)
WASM_MISC_OPCODE(F2Add, 0x1ed, Limit, true)
WASM_MISC_OPCODE(F2Sub, 0x1ee, Limit, true)
WASM_MISC_OPCODE(F2Mul, 0x1ef, Limit, true)
WASM_MISC_OPCODE(F2Neg, 0x1f0, Limit, true)
WASM_MISC_OPCODE(F2And, 0x1f1, Limit, true)
WASM_MISC_OPCODE(F2Or, 0x1f2, Limit, true)
WASM_MISC_OPCODE(F2Xor, 0x1f3, Limit, true)
WASM_MISC_OPCODE(F2Not, 0x1f4, Limit, true)
WASM_MISC_OPCODE(F2Eq, 0x1f5, Limit, true)
WASM_MISC_OPCODE(F2Ne, 0x1f6, Limit, true)
WASM_MISC_OPCODE(F2Lt, 0x1f7, Limit, true)
WASM_MISC_OPCODE(F2Le, 0x1f8, Limit, true)
WASM_MISC_OPCODE(F2Gt, 0x1f9, Limit, true)
WASM_MISC_OPCODE(F2Ge, 0x1fa, Limit, true)
WASM_MISC_OPCODE(F2Load, 0x1fb, Limit, true)
WASM_MISC_OPCODE(F2Store, 0x1fc, Limit, true)
WASM_MISC_OPCODE(F2Abs, 0x1fd, Limit, true)
WASM_MISC_OPCODE(F2Min, 0x1fe, Limit, true)
WASM_MISC_OPCODE(F2Max, 0x1ff, Limit, true)
WASM_MISC_OPCODE(F2Div, 0x200, Limit, true)
WASM_MISC_OPCODE(F2Sqrt, 0x201, Limit, true)
WASM_MISC_OPCODE(F2Rcp, 0x202, Limit, true)
WASM_MISC_OPCODE(F2Rsqrt, 0x203, Limit, true)
WASM_MISC_OPCODE(F2ConvertS, 0x204, Limit, true)
WASM_MISC_OPCODE(F2ConvertU, 0x205, Limit, true)
WASM_MISC_OPCODE(I2Swizzle, 0x206, Limit, true)
WASM_MISC_OPCODE(I2Shuffle, 0x207, Limit, true)
WASM_MISC_OPCODE(I2Select, 0x208, Limit, true)
WASM_MISC_OPCODE(I2Replace, 0x209, Limit, true)
WASM_MISC_OPCODE(I4Swizzle, 0x20a, Limit, true)
WASM_MISC_OPCODE(I4Shuffle, 0x20b, Limit, true)
WASM_MISC_OPCODE(I4Select, 0x20c, Limit, true)
WASM_MISC_OPCODE(I4Replace, 0x20d, Limit, true)
WASM_MISC_OPCODE(I8Swizzle, 0x20e, Limit, true)
WASM_MISC_OPCODE(I8Shuffle, 0x20f, Limit, true)
WASM_MISC_OPCODE(I8Select, 0x210, Limit, true)
WASM_MISC_OPCODE(I8Replace, 0x211, Limit, true)
WASM_MISC_OPCODE(I16Swizzle, 0x212, Limit, true)
WASM_MISC_OPCODE(I16Shuffle, 0x213, Limit, true)
WASM_MISC_OPCODE(I16Select, 0x214, Limit, true)
WASM_MISC_OPCODE(I16Replace, 0x215, Limit, true)
WASM_MISC_OPCODE(B2Swizzle, 0x216, Limit, true)
WASM_MISC_OPCODE(B2Shuffle, 0x217, Limit, true)
WASM_MISC_OPCODE(B2Select, 0x218, Limit, true)
WASM_MISC_OPCODE(B2Replace, 0x219, Limit, true)
WASM_MISC_OPCODE(B4Swizzle, 0x21a, Limit, true)
WASM_MISC_OPCODE(B4Shuffle, 0x21b, Limit, true)
WASM_MISC_OPCODE(B4Select, 0x21c, Limit, true)
WASM_MISC_OPCODE(B4Replace, 0x21d, Limit, true)
WASM_MISC_OPCODE(B8Swizzle, 0x21e, Limit, true)
WASM_MISC_OPCODE(B8Shuffle, 0x21f, Limit, true)
WASM_MISC_OPCODE(B8Select, 0x220, Limit, true)
WASM_MISC_OPCODE(B8Replace, 0x221, Limit, true)
WASM_MISC_OPCODE(B16Swizzle, 0x222, Limit, true)
WASM_MISC_OPCODE(B16Shuffle, 0x223, Limit, true)
WASM_MISC_OPCODE(B16Select, 0x224, Limit, true)
WASM_MISC_OPCODE(B16Replace, 0x225, Limit, true)
WASM_MISC_OPCODE(F2Swizzle, 0x226, Limit, true)
WASM_MISC_OPCODE(F2Shuffle, 0x227, Limit, true)
WASM_MISC_OPCODE(F2Select, 0x228, Limit, true)
WASM_MISC_OPCODE(F2Replace, 0x229, Limit, true)
WASM_MISC_OPCODE(F4Swizzle, 0x22a, Limit, true)
WASM_MISC_OPCODE(F4Shuffle, 0x22b, Limit, true)
WASM_MISC_OPCODE(F4Select, 0x22c, Limit, true)
WASM_MISC_OPCODE(F4Replace, 0x22d, Limit, true)

#undef WASM_SIMD_BUILD_OPCODE
