trigger:
- master
- release/*

jobs:
  - job: CMake
    timeoutInMinutes: 120
    strategy:
      matrix:
        Linux.Debug:
          image_name: 'ubuntu-latest'
          deps: 'sudo apt-get install -y ninja-build clang libicu-dev'
          build_type: 'Debug'
          test_target: 'check'
          libtype_flag: ''
        Linux.ReleaseWithDebug:
          image_name: 'ubuntu-latest'
          deps: 'sudo apt-get install -y ninja-build clang libicu-dev'
          build_type: 'RelWithDebInfo'
          test_target: 'check'
          libtype_flag: ''
        Linux.Release:
          image_name: 'ubuntu-latest'
          deps: 'sudo apt-get install -y ninja-build clang libicu-dev'
          build_type: 'Release'
          test_target: 'all'
          libtype_flag: ''
        OSX.Debug:
          image_name: 'macOS-latest'
          deps: 'brew install ninja icu4c'
          build_type: 'Debug'
          test_target: 'check'
          libtype_flag: '-DSTATIC_LIBRARY=ON'
        OSX.ReleaseWithDebug:
          image_name: 'macOS-latest'
          deps: 'brew install ninja icu4c'
          build_type: 'RelWithDebInfo'
          test_target: 'check'
          libtype_flag: ''
        OSX.Release:
          image_name: 'macOS-latest'
          deps: 'brew install ninja icu4c'
          build_type: 'Release'
          test_target: 'all'
          libtype_flag: ''

    pool:
      vmImage: $(image_name)
      
    steps:
    - script: $(deps)
      displayName: 'Install dependencies'
  
    - script: |
        mkdir -p build
      displayName: 'Create build directories'

    - script: |
        cd build
        cmake -GNinja -DCMAKE_BUILD_TYPE=$BUILD_TYPE $LIBTYPE -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang ..
      displayName: CMake
      env:
        BUILD_TYPE: $(build_type)
        LIBTYPE: $(libtype_flag)

    - script: |
        cd build
        ninja $TARGET
      displayName: 'Build and test'
      env:
        TARGET: $(test_target)
